@namespace(uri="microserviceArchitecture", prefix="")
package microserviceArchitecture;

class Application {
	val Microservice[*] microservices;
	val EventStream[*] streams;
}

class Microservice {
	attr String name;
	ref EventStream[*] consumesFrom;
	val Event[*] produces;
	val HttpClient[*] clients;
}

class Event {
	attr String name;
	ref EventStream sentTo;
	ref EventType eventType;
}

class EventType {
	attr String keyType;
	attr String valueType;
	attr String key;
	attr String value;
}

class EventStream {
	attr String streamName;
	val EventType eventType;
	ref Event[*] eventsRecieved;
	ref Microservice[*] consumers;
}

class HttpClient {
	attr String urlName;
	val HttpMethod[*] methods;
}

class HttpMethod {
	attr String methodName;
	attr MethodType type;
	attr String returnType;
	val Parameter[*] parameters;
}

class Parameter {
	attr String parameterName;
	attr String parameterType;
}

enum MethodType {
	Post = 0;
	Get = 1;
	Delete = 2;
	Put = 3;
}

